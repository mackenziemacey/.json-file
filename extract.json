[
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Birthplace",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Bucks Co., PA",
          "Bucks Co. PA",
          "Bucks Co., Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bucks Co., PA"
      },
      {
        "from": [
          "Albany N.Y.",
          "Albany, NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Albany N.Y."
      },
      {
        "from": [
          "Adams Co., PA",
          "Adams Co., Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Adams Co., PA"
      },
      {
        "from": [
          "Amsterdam, Holland",
          "Holland, Amsterdam"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Amsterdam, Holland"
      },
      {
        "from": [
          "Philadelphia",
          "Philadelphia."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Philadelphia"
      },
      {
        "from": [
          "Sussex Co. Delaware",
          "Sussex Co., Delaware"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sussex Co. Delaware"
      },
      {
        "from": [
          "Carlisle, PA",
          "Carlisle, Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Carlisle, PA"
      },
      {
        "from": [
          "Philadelphia Co.",
          "Philadelphia, Co."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Philadelphia Co."
      },
      {
        "from": [
          "Penna.",
          "Penna"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Penna."
      },
      {
        "from": [
          "Frederick Co, Maryland",
          "Frederick Co., Maryland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Frederick Co, Maryland"
      },
      {
        "from": [
          "Lehigh Co.",
          "Lehigh Co"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lehigh Co."
      },
      {
        "from": [
          "Mifflin, PA",
          "Mifflin, Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mifflin, PA"
      },
      {
        "from": [
          "Northampton, PA",
          "Northampton, Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Northampton, PA"
      },
      {
        "from": [
          "York Co.",
          "York, Co."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "York Co."
      },
      {
        "from": [
          "NJ",
          "N.J."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NJ"
      },
      {
        "from": [
          "Bucks Co.",
          "Bucks Co"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bucks Co."
      },
      {
        "from": [
          "Reading, PA",
          "Reading, Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Reading, PA"
      },
      {
        "from": [
          "Lancaster, PA",
          "Lancaster, Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lancaster, PA"
      }
    ],
    "description": "Mass edit cells in column Birthplace"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Birthplace",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Virginia",
          "Virgina"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Virginia"
      },
      {
        "from": [
          "Delaware Co.",
          "Delware Co."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delaware Co."
      },
      {
        "from": [
          "Saxony, Germany",
          "Saxony, Germ."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Saxony, Germany"
      },
      {
        "from": [
          "Albany N.Y.",
          "Albany"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Albany N.Y."
      },
      {
        "from": [
          "Harrisburg",
          "Harrisburgh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Harrisburg"
      },
      {
        "from": [
          "Northampton, PA",
          "Northhampton, Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Northampton, PA"
      }
    ],
    "description": "Mass edit cells in column Birthplace"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Birthplace",
    "expression": "value",
    "edits": [
      {
        "from": [
          "New Jersey",
          "N. Jersey",
          "N. Jers."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New Jersey"
      },
      {
        "from": [
          "Chambersburg",
          "Chambersburg, PA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chambersburg"
      },
      {
        "from": [
          "New York",
          "N. York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York"
      },
      {
        "from": [
          "New Hampshire",
          "N. Hampshire"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New Hampshire"
      }
    ],
    "description": "Mass edit cells in column Birthplace"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EthnicityReligionOccupation",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Mulatto, laborer",
          "Mulatto; Laborer",
          "Mulatto; laborer",
          "Laborer, mulatto",
          "Mulatto, Laborer"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mulatto, laborer"
      },
      {
        "from": [
          "Black; Laborer",
          "Black, laborer",
          "black, laborer",
          "Laborer, Black"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Black; Laborer"
      },
      {
        "from": [
          "Black; female",
          "Black; Female",
          "Female; Black",
          "black; female"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Black; female"
      },
      {
        "from": [
          "Black",
          "black",
          "(Black)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Black"
      },
      {
        "from": [
          "Black, blacksmith",
          "Black; Blacksmith",
          "black, blacksmith"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Black, blacksmith"
      },
      {
        "from": [
          "Black; Servant",
          "Black, Servant",
          "Black, servant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Black; Servant"
      },
      {
        "from": [
          "Blacksmith",
          "blacksmith"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Blacksmith"
      },
      {
        "from": [
          "Baker",
          "baker"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Baker"
      },
      {
        "from": [
          "Black, barber",
          "Black; Barber"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Black, barber"
      },
      {
        "from": [
          "Mulatto",
          "mulatto"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mulatto"
      },
      {
        "from": [
          "Black; Servant; Female",
          "Female; Servant; Black"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Black; Servant; Female"
      },
      {
        "from": [
          "Laborer",
          "laborer"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Laborer"
      },
      {
        "from": [
          "Mulatto; Shoemaker",
          "Mulatto, shoemaker"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mulatto; Shoemaker"
      },
      {
        "from": [
          "Light mulatto",
          "light mulatto"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Light mulatto"
      },
      {
        "from": [
          "Mulatto; Blacksmith",
          "Mulatto; blacksmith"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mulatto; Blacksmith"
      },
      {
        "from": [
          "Black shoemaker",
          "Black, Shoemaker"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Black shoemaker"
      },
      {
        "from": [
          "Cabinet Maker",
          "Cabinet maker"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cabinet Maker"
      },
      {
        "from": [
          "Mulatto; Female",
          "Mulatto; female"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mulatto; Female"
      },
      {
        "from": [
          "House Carpenter",
          "House carpenter"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "House Carpenter"
      },
      {
        "from": [
          "Mulatto, barber",
          "Mulatto; Barber"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mulatto, barber"
      },
      {
        "from": [
          "Weaver",
          "[[Weaver]]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Weaver"
      }
    ],
    "description": "Mass edit cells in column EthnicityReligionOccupation"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EthnicityReligionOccupation",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Black, brickmaker",
          "Black; Brick maker"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Black, brickmaker"
      },
      {
        "from": [
          "Brickmaker",
          "Brick maker"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Brickmaker"
      },
      {
        "from": [
          "Gun stock maker",
          "Gunstock maker"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Gun stock maker"
      },
      {
        "from": [
          "Millwright",
          "Mill wright"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Millwright"
      },
      {
        "from": [
          "Stage driver",
          "Stagedriver"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Stage driver"
      },
      {
        "from": [
          "Stone cutter",
          "Stonecutter"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Stone cutter"
      },
      {
        "from": [
          "Brick layer",
          "Bricklayer"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Brick layer"
      }
    ],
    "description": "Mass edit cells in column EthnicityReligionOccupation"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EthnicityReligionOccupation",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Black; Laborer",
          "Black, barber & laborer"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Black; Laborer"
      },
      {
        "from": [
          "Showmaker, never Boused",
          "Showmaker, never bound"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Showmaker, never Boused"
      },
      {
        "from": [
          "Blacksmith",
          "Black, blacksmith"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Blacksmith"
      },
      {
        "from": [
          "Mulatto, laborer",
          "Mulatto, barber"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mulatto, laborer"
      },
      {
        "from": [
          "Tobacconist",
          "Tobbaconist"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tobacconist"
      }
    ],
    "description": "Mass edit cells in column EthnicityReligionOccupation"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "SentencingLocation",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Circuit court U.S.",
          "Circuit Court U.S.",
          "U.S. Circuit Court"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Circuit court U.S."
      },
      {
        "from": [
          "[[Crim. Sess. Phila.]]",
          "[[Crim. Sess,. Phila.]]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "[[Crim. Sess. Phila.]]"
      },
      {
        "from": [
          "Franklin Co.",
          "franklin Co."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Franklin Co."
      },
      {
        "from": [
          "[[PA]]",
          "PA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "[[PA]]"
      },
      {
        "from": [
          "Tioga Co, Pa",
          "tioga Co, Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tioga Co, Pa"
      }
    ],
    "description": "Mass edit cells in column SentencingLocation"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "SentencingLocation",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Schuylkill Co.",
          "Schulykill Co."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Schuylkill Co."
      },
      {
        "from": [
          "Columbia Co.",
          "Colum[[bia]]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Columbia Co."
      },
      {
        "from": [
          "Philadelphia",
          "Philadelpiha"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Philadelphia"
      },
      {
        "from": [
          "Delaware Co.",
          "Delware Co."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delaware Co."
      }
    ],
    "description": "Mass edit cells in column SentencingLocation"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Offense",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Horse Stealing & Larceny",
          "Horse stealing & Larceny",
          "Horse stealing & larceny",
          "Horse stealing + Larceny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Horse Stealing & Larceny"
      },
      {
        "from": [
          "Assault and battery intent to kill",
          "Assault and battery, intent to kill"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Assault and battery intent to kill"
      },
      {
        "from": [
          "Murder, 2nd degree",
          "Murder 2nd degree"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Murder, 2nd degree"
      },
      {
        "from": [
          "Horse stealing",
          "Horse Stealing"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Horse stealing"
      },
      {
        "from": [
          "Assault and Battery, intent to rape",
          "Assault and battery intent to rape"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Assault and Battery, intent to rape"
      },
      {
        "from": [
          "Assault intention to kill",
          "Assault, intention to kill"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Assault intention to kill"
      },
      {
        "from": [
          "Counterfeiting Forgery",
          "Forgery & counterfeiting"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Counterfeiting Forgery"
      },
      {
        "from": [
          "Assault and Battery",
          "Assault and battery"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Assault and Battery"
      },
      {
        "from": [
          "Larceny",
          "larceny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Larceny"
      },
      {
        "from": [
          "Counterfeiting",
          "counterfeiting"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Counterfeiting"
      },
      {
        "from": [
          "Selling Counterfeit Money",
          "Selling counterfeit money"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Selling Counterfeit Money"
      },
      {
        "from": [
          "Burglary & Larceny",
          "Burglary & larceny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Burglary & Larceny"
      }
    ],
    "description": "Mass edit cells in column Offense"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Offense",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Horse Stealing & Larceny",
          "Larcery & Horse Stealing"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Horse Stealing & Larceny"
      },
      {
        "from": [
          "Passing counterfeit money",
          "Passing of counterfeit money"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Passing counterfeit money"
      },
      {
        "from": [
          "Assault and Battery, intent to rape",
          "Assault and Battery intention to rape"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Assault and Battery, intent to rape"
      }
    ],
    "description": "Mass edit cells in column Offense"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Age",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Age using expression value.toNumber()"
  },
  {
    "op": "core/row-removal",
    "engineConfig": {
      "facets": [
        {
          "type": "timerange",
          "name": "Birthplace",
          "expression": "value",
          "columnName": "Birthplace",
          "from": -9223372036854776000,
          "to": 1,
          "selectTime": true,
          "selectNonTime": false,
          "selectBlank": false,
          "selectError": true
        },
        {
          "type": "range",
          "name": "Age",
          "expression": "value",
          "columnName": "Age",
          "from": 11,
          "to": 76,
          "selectNumeric": false,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "record-based"
    },
    "description": "Remove rows"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "ColumnNote",
    "expression": "value",
    "edits": [
      {
        "from": [
          "reads and writes; drinks; married",
          "reads and writes, drinks, married",
          "Reads and writes, drinks, married",
          "reads and writes; married; drinks",
          "drinks; married; reads and writes",
          "reads and writes, married, drinks"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads and writes; drinks; married"
      },
      {
        "from": [
          "reads and writes, drinks, single",
          "reads and writes; drinks; single",
          "Reads and writes, drinks, single",
          "reads and writes; single; drinks",
          "reads and writes, drinks , single",
          "reads and writes, drinks,  single"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads and writes, drinks, single"
      },
      {
        "from": [
          "reads and writes; sober; single",
          "reads and writes, sober, single",
          "reads and writes; single; sober",
          "Reads and writes, sober, single",
          "Reads and writes; sober; single"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads and writes; sober; single"
      },
      {
        "from": [
          "reads, drinks, single",
          "reads; drinks; single",
          "Reads, drinks, single",
          "Reads, single, drinks",
          "reads; single; drinks"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads, drinks, single"
      },
      {
        "from": [
          "can't read or write, drinks, single",
          "Can't read or write, drinks, single",
          "can't read or write; drinks; single",
          "Can't read or write, single, drinks"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "can't read or write, drinks, single"
      },
      {
        "from": [
          "reads, drinks, married",
          "reads; drinks; married",
          "Reads, drinks, married",
          "Reads; married; drinks"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads, drinks, married"
      },
      {
        "from": [
          "Reads and writes a little, drinks, single",
          "reads and writes a little, single, drinks",
          "reads and writes a little; single; drinks",
          "reads and writes; drinks a little; single"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Reads and writes a little, drinks, single"
      },
      {
        "from": [
          "Can't read or write, temperate, single",
          "can't read or write, temperate, single",
          "Can't read or write, single, temperate",
          "Can't read or write, temperate,  single"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Can't read or write, temperate, single"
      },
      {
        "from": [
          "reads, sober, married",
          "reads, married, sober",
          "reads; sober; married"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads, sober, married"
      },
      {
        "from": [
          "cannot read; drinks; single",
          "Cannot read; drinks; single",
          "cannot read; single; drinks"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "cannot read; drinks; single"
      },
      {
        "from": [
          "reads, sober, single",
          "reads; sober; single",
          "reads; single; sober"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads, sober, single"
      },
      {
        "from": [
          "reads and writes; gets drunk; single",
          "reads and writes, gets drunk, single",
          "reads and writes; single; gets drunk"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads and writes; gets drunk; single"
      },
      {
        "from": [
          "Can't read, temperate, married",
          "can't read, married, temperate",
          "can't read, temperate, married"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Can't read, temperate, married"
      },
      {
        "from": [
          "reads and writes, temperate, married",
          "Reads and writes, temperate, married",
          "reads and writes, married, temperate"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads and writes, temperate, married"
      },
      {
        "from": [
          "reads and writes, temperate, single",
          "Reads and writes, temperate, single",
          "reads and writes, single, temperate"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads and writes, temperate, single"
      },
      {
        "from": [
          "Temperate, single, reads and writes German",
          "reads and writes German, temperate, single",
          "reads and writes, german, temperate, Single"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Temperate, single, reads and writes German"
      },
      {
        "from": [
          "reads & writes, gets drunk, single",
          "reads, writes, gets drunk, single",
          "reads, writes, single, gets drunk"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads & writes, gets drunk, single"
      },
      {
        "from": [
          "Can't read or write, married, sober",
          "Can't read or write, sober, married",
          "can't read or write, sober, married"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Can't read or write, married, sober"
      },
      {
        "from": [
          "reads and writes; drinks; widower",
          "reads and writes, drinks, widower",
          "reads and writes, widower, drinks"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads and writes; drinks; widower"
      },
      {
        "from": [
          "Can't read",
          "can't read"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Can't read"
      },
      {
        "from": [
          "reads; got drunk; single",
          "reads, got drunk, single"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads; got drunk; single"
      },
      {
        "from": [
          "reads, writes, gets drunk, married",
          "reads & writes, gets drunk, married"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads, writes, gets drunk, married"
      },
      {
        "from": [
          "reads and writes; sober; married",
          "reads and writes; married; sober"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads and writes; sober; married"
      },
      {
        "from": [
          "can't read or write, drunk, single",
          "Can't read or write, drunk, single"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "can't read or write, drunk, single"
      },
      {
        "from": [
          "reads, drank, married",
          "reads; drank; married"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads, drank, married"
      },
      {
        "from": [
          "reads and writes; gets drunk; married",
          "Reads and writes; gets drunk; married"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads and writes; gets drunk; married"
      },
      {
        "from": [
          "can't read or write, drinks, married",
          "Can't read or write, drinks, married"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "can't read or write, drinks, married"
      },
      {
        "from": [
          "reads; gets drunk; single",
          "reads, gets drunk, single"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads; gets drunk; single"
      },
      {
        "from": [
          "can't read, drinks, single",
          "can't read, single, drinks"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "can't read, drinks, single"
      },
      {
        "from": [
          "reads and writes a little; gets drunk; married",
          "reads and writes a little; married; gets drunk"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads and writes a little; gets drunk; married"
      },
      {
        "from": [
          "reads a little; gets drunk; single",
          "reads a little, gets drunk, single"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads a little; gets drunk; single"
      },
      {
        "from": [
          "reads & writes, married, temperate",
          "reads & writes, temperate, married"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads & writes, married, temperate"
      },
      {
        "from": [
          "reads, writes, drinks, single",
          "reads & writes, drinks, single"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads, writes, drinks, single"
      },
      {
        "from": [
          "reads and writes, single",
          "reads and writes; single"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads and writes, single"
      },
      {
        "from": [
          "Reads, drunk, married",
          "reads, drunk, married"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Reads, drunk, married"
      },
      {
        "from": [
          "Can't read or write, temperate, married",
          "can't read or write, temperate, married"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Can't read or write, temperate, married"
      },
      {
        "from": [
          "Can't read or write, gets drunk, married",
          "can't read or write, gets drunk, married"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Can't read or write, gets drunk, married"
      },
      {
        "from": [
          "reads and writes",
          "Reads and writes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads and writes"
      },
      {
        "from": [
          "reads, temperate, married",
          "reads, married, temperate"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads, temperate, married"
      },
      {
        "from": [
          "reads German; gets drunk; married",
          "reads; gets drunk; married; reads German"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads German; gets drunk; married"
      },
      {
        "from": [
          "can't read, sober, single",
          "Can't read, sober, single"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "can't read, sober, single"
      },
      {
        "from": [
          "reads and writes; got drunk; single",
          "Reads and writes, got drunk, single"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads and writes; got drunk; single"
      },
      {
        "from": [
          "Reads and writes, temperate",
          "reads and writes; temperate"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Reads and writes, temperate"
      },
      {
        "from": [
          "reads and writes; married; drank",
          "reads and writes; drank; married"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads and writes; married; drank"
      },
      {
        "from": [
          "cannot read or write; drinks; single; learned to read",
          "cannot read or write; single; drinks; learned to read"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "cannot read or write; drinks; single; learned to read"
      },
      {
        "from": [
          "Cannot read; drinks; single; reads German",
          "cannot read; drinks; single; reads German"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cannot read; drinks; single; reads German"
      },
      {
        "from": [
          "reads, writes, sober, married",
          "reads, writes, married, sober"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads, writes, sober, married"
      },
      {
        "from": [
          "reads; drinks; widow",
          "reads, drinks, widow"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads; drinks; widow"
      },
      {
        "from": [
          "can't read or write, gets drunk, single",
          "can't read or write; gets drunk; single"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "can't read or write, gets drunk, single"
      },
      {
        "from": [
          "reads & writes, drunk, single",
          "reads, writes, drunk, single"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads & writes, drunk, single"
      },
      {
        "from": [
          "cannot read; drinks; married",
          "cannot read; married; drinks"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "cannot read; drinks; married"
      },
      {
        "from": [
          "Can read",
          "can read"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Can read"
      },
      {
        "from": [
          "reads & writes German, sober, married",
          "reads writes German, married, sober"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads & writes German, sober, married"
      },
      {
        "from": [
          "reads, writes, drinks, married",
          "reads & writes, drinks, married"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads, writes, drinks, married"
      },
      {
        "from": [
          "reads, writes, drunk, married",
          "reads & writes, drunk, married"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads, writes, drunk, married"
      },
      {
        "from": [
          "cannot read or write; gets drunk; single",
          "cannot read or write, gets drunk, single"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "cannot read or write; gets drunk; single"
      },
      {
        "from": [
          "reads, writes, single, temperate",
          "reads, writes, temperate, single"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads, writes, single, temperate"
      },
      {
        "from": [
          "reads a little, drinks, married",
          "reads a little; married; drinks"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads a little, drinks, married"
      },
      {
        "from": [
          "reads, single, drank",
          "reads; drank; single"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads, single, drank"
      }
    ],
    "description": "Mass edit cells in column ColumnNote"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "ColumnNote",
    "expression": "value",
    "edits": [
      {
        "from": [
          "cannot read; gets drunk; single",
          "cannot read, gets drunk, single"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "cannot read; gets drunk; single"
      },
      {
        "from": [
          "cannot read or write; drinks; single",
          "cannot read or write, drinks, single"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "cannot read or write; drinks; single"
      }
    ],
    "description": "Mass edit cells in column ColumnNote"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "ColumnNote",
    "expression": "grel:value.replace(\",\", \";\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ColumnNote using expression grel:value.replace(\",\", \";\")"
  },
  {
    "op": "core/column-split",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "ColumnNote",
    "guessCellType": true,
    "removeOriginalColumn": true,
    "mode": "separator",
    "separator": ";",
    "regex": false,
    "maxColumns": 0,
    "description": "Split column ColumnNote by separator"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "ColumnNote 1",
    "newColumnName": "Literacy",
    "description": "Rename column ColumnNote 1 to Literacy"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "ColumnNote 2",
    "newColumnName": "Sobriety",
    "description": "Rename column ColumnNote 2 to Sobriety"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "ColumnNote 3",
    "newColumnName": "Marriage Status",
    "description": "Rename column ColumnNote 3 to Marriage Status"
  },
  {
    "op": "core/column-removal",
    "columnName": "ColumnNote 6",
    "description": "Remove column ColumnNote 6"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "ColumnNote 6",
          "expression": "value",
          "columnName": "ColumnNote 6",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": " single",
                "l": " single"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "record-based"
    },
    "baseColumnName": "ColumnNote 5",
    "expression": "grel:cells[\"ColumnNote 4\"]. value + \";\" + cells[\"ColumnNote 5\"].value",
    "onError": "set-to-blank",
    "newColumnName": "Extra Information",
    "columnInsertIndex": 16,
    "description": "Create column Extra Information at index 16 based on column ColumnNote 5 using expression grel:cells[\"ColumnNote 4\"]. value + \";\" + cells[\"ColumnNote 5\"].value"
  },
  {
    "op": "core/column-removal",
    "columnName": "ColumnNote 5",
    "description": "Remove column ColumnNote 5"
  },
  {
    "op": "core/column-removal",
    "columnName": "ColumnNote 4",
    "description": "Remove column ColumnNote 4"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "ColumnNote 6",
          "expression": "value",
          "columnName": "ColumnNote 6",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": " single",
                "l": " single"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "record-based"
    },
    "columnName": "Literacy",
    "expression": "value",
    "edits": [
      {
        "from": [
          "reads German",
          "Reads German",
          "reads german"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads German"
      },
      {
        "from": [
          "Can spell",
          "can spell"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Can spell"
      },
      {
        "from": [
          "reads only",
          "Reads only"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads only"
      },
      {
        "from": [
          "Cannot read [[etc]]",
          "cannot read [[etc]]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cannot read [[etc]]"
      },
      {
        "from": [
          "can't read or writes",
          "Can't read or writes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "can't read or writes"
      },
      {
        "from": [
          "Can read",
          "can read"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Can read"
      },
      {
        "from": [
          "reads and writes German",
          "Reads and writes German"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads and writes German"
      },
      {
        "from": [
          "can't read",
          "Can't read"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "can't read"
      },
      {
        "from": [
          "cannot read",
          "Cannot read"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "cannot read"
      },
      {
        "from": [
          "can't read or write",
          "Can't read or write"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "can't read or write"
      },
      {
        "from": [
          "Can read and write",
          "can read and write"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Can read and write"
      },
      {
        "from": [
          "cannot read or write",
          "Cannot read or write"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "cannot read or write"
      },
      {
        "from": [
          "Can read a little",
          "can read a little"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Can read a little"
      },
      {
        "from": [
          "reads and writes a little",
          "Reads and writes a little"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads and writes a little"
      },
      {
        "from": [
          "reads",
          "Reads"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads"
      },
      {
        "from": [
          "Can read and write a little",
          "can read and write a little"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Can read and write a little"
      },
      {
        "from": [
          "reads and writes",
          "Reads and writes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads and writes"
      }
    ],
    "description": "Mass edit cells in column Literacy"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "ColumnNote 6",
          "expression": "value",
          "columnName": "ColumnNote 6",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": " single",
                "l": " single"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "record-based"
    },
    "columnName": "Literacy",
    "expression": "value",
    "edits": [
      {
        "from": [
          "reads and writes German",
          "reads & writes German"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads and writes German"
      },
      {
        "from": [
          "cannot read",
          "Cannot read [[etc]]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "cannot read"
      },
      {
        "from": [
          "can't read or write",
          "cannot read or write"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "can't read or write"
      },
      {
        "from": [
          "Can read and write",
          "can't read & write"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Can read and write"
      },
      {
        "from": [
          "Can read a little",
          "Can read little"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Can read a little"
      },
      {
        "from": [
          "reads & writes a letter",
          "reads & writes a little"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads & writes a letter"
      },
      {
        "from": [
          "reads and writes",
          "reads and wirtes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads and writes"
      },
      {
        "from": [
          "can't read",
          "Can read [[etc]]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "can't read"
      },
      {
        "from": [
          "reads a little",
          "reads little"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads a little"
      },
      {
        "from": [
          "can't read or writes",
          "cannot read or writes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "can't read or writes"
      }
    ],
    "description": "Mass edit cells in column Literacy"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "ColumnNote 6",
          "expression": "value",
          "columnName": "ColumnNote 6",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": " single",
                "l": " single"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "record-based"
    },
    "columnName": "Literacy",
    "expression": "value",
    "edits": [
      {
        "from": [
          "cannot read",
          "can't read"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "cannot read"
      }
    ],
    "description": "Mass edit cells in column Literacy"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "ColumnNote 6",
          "expression": "value",
          "columnName": "ColumnNote 6",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": " single",
                "l": " single"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "record-based"
    },
    "columnName": "Literacy",
    "expression": "value",
    "edits": [
      {
        "from": [
          "reads",
          "read"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "reads"
      }
    ],
    "description": "Mass edit cells in column Literacy"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "ColumnNote 6",
          "expression": "value",
          "columnName": "ColumnNote 6",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": " single",
                "l": " single"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "record-based"
    },
    "columnName": "Sobriety",
    "expression": "value",
    "edits": [
      {
        "from": [
          " German",
          " german"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": " German"
      },
      {
        "from": [
          " has learned to read in prison",
          " has learned to read in Prison"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": " has learned to read in prison"
      },
      {
        "from": [
          " sober",
          " Sober"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": " sober"
      },
      {
        "from": [
          " drinks",
          "drinks"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": " drinks"
      },
      {
        "from": [
          " drunk often",
          " often drunk"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": " drunk often"
      }
    ],
    "description": "Mass edit cells in column Sobriety"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "ColumnNote 6",
          "expression": "value",
          "columnName": "ColumnNote 6",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": " single",
                "l": " single"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "record-based"
    },
    "columnName": "Sobriety",
    "expression": "value",
    "edits": [
      {
        "from": [
          " gets drunk sometimes",
          " got drunk sometimes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": " gets drunk sometimes"
      },
      {
        "from": [
          " drank occasionally",
          " drinks occasionally"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": " drank occasionally"
      },
      {
        "from": [
          " gets drunk",
          " gets drunks"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": " gets drunk"
      },
      {
        "from": [
          " single",
          " is single"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": " single"
      }
    ],
    "description": "Mass edit cells in column Sobriety"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "ColumnNote 6",
          "expression": "value",
          "columnName": "ColumnNote 6",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": " single",
                "l": " single"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "record-based"
    },
    "columnName": "Marriage Status",
    "expression": "value",
    "edits": [
      {
        "from": [
          " single",
          "single"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": " single"
      },
      {
        "from": [
          " married",
          " Married"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": " married"
      }
    ],
    "description": "Mass edit cells in column Marriage Status"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "ColumnNote 6",
          "expression": "value",
          "columnName": "ColumnNote 6",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": " single",
                "l": " single"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "record-based"
    },
    "columnName": "Marriage Status",
    "expression": "value",
    "edits": [
      {
        "from": [
          " single",
          " is single"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": " single"
      }
    ],
    "description": "Mass edit cells in column Marriage Status"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Sobriety",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Sobriety using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "AdmissionDate",
    "expression": "value.toDate()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column AdmissionDate using expression value.toDate()"
  },
  {
    "op": "core/column-split",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "EthnicityReligionOccupation",
    "guessCellType": true,
    "removeOriginalColumn": false,
    "mode": "separator",
    "separator": ";",
    "regex": false,
    "maxColumns": 0,
    "description": "Split column EthnicityReligionOccupation by separator"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "EthnicityReligionOccupation 1",
    "newColumnName": "Religion",
    "description": "Rename column EthnicityReligionOccupation 1 to Religion"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "EthnicityReligionOccupation",
    "newColumnName": "Ethnicity",
    "description": "Rename column EthnicityReligionOccupation to Ethnicity"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "EthnicityReligionOccupation 2",
    "newColumnName": "Occupation ",
    "description": "Rename column EthnicityReligionOccupation 2 to Occupation "
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "EthnicityReligionOccupation 3",
    "newColumnName": "Gender",
    "description": "Rename column EthnicityReligionOccupation 3 to Gender"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Ethnicity",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Ethnicity using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Religion",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Religion using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Occupation ",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Occupation  using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "Gender",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Gender using expression value.trim()"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Ethnicity",
          "expression": "value",
          "columnName": "Ethnicity",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Female",
                "l": "Female"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "record-based"
    },
    "baseColumnName": "Ethnicity",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "Gender to Merge",
    "columnInsertIndex": 4,
    "description": "Create column Gender to Merge at index 4 based on column Ethnicity using expression grel:value"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "Gender",
    "newColumnName": "column",
    "description": "Rename column Gender to column"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "Ethnicity",
          "expression": "value",
          "columnName": "Ethnicity",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Female",
                "l": "Female"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "record-based"
    },
    "baseColumnName": "Gender to Merge",
    "expression": "join ([cells['Gender to Merge'].value],';')",
    "onError": "keep-original",
    "newColumnName": "Gender",
    "columnInsertIndex": 5,
    "description": "Create column Gender at index 5 based on column Gender to Merge using expression join ([cells['Gender to Merge'].value],';')"
  },
  {
    "op": "core/column-removal",
    "columnName": "column",
    "description": "Remove column column"
  },
  {
    "op": "core/column-removal",
    "columnName": "Gender to Merge",
    "description": "Remove column Gender to Merge"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "Sentencing",
    "expression": "grel:value.find(/([0-9]+)\\s(mos+)/).join(\"\").replace(\"mos\",\"\")",
    "onError": "set-to-blank",
    "newColumnName": "Months",
    "columnInsertIndex": 13,
    "description": "Create column Months at index 13 based on column Sentencing using expression grel:value.find(/([0-9]+)\\s(mos+)/).join(\"\").replace(\"mos\",\"\")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "baseColumnName": "Sentencing",
    "expression": "grel:value.find(/([0-9]+)\\s(yr+)/).join(\"\").replace(\"yr\",\"\")",
    "onError": "set-to-blank",
    "newColumnName": "Years",
    "columnInsertIndex": 13,
    "description": "Create column Years at index 13 based on column Sentencing using expression grel:value.find(/([0-9]+)\\s(yr+)/).join(\"\").replace(\"yr\",\"\")"
  }
]
